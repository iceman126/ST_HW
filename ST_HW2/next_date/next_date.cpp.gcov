        -:    0:Source:next_date.cpp
        -:    0:Graph:next_date.gcno
        -:    0:Data:next_date.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "hw1.h"
        -:    2:
function _Z9next_dateB5cxx11iii called 37 returned 100% blocks executed 70%
       37:    3:string next_date(int month, int day, int year) {
       37:    4:	bool leap_year = false;
       37:    5:	if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0))
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
branch  2 taken 39% (fallthrough)
branch  3 taken 61%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
       17:    6:		leap_year = true;
        -:    7:
       74:    8:	unordered_set<int> short_months = { 4, 6, 9, 11 };
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
call    6 never executed
call    7 never executed
call    8 never executed
       74:    9:	unordered_set<int> long_months = { 1, 3, 5, 7, 8, 10, 12 };
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
call    6 never executed
        -:   10:
       37:   11:	if (month < 1 || month > 12 || day > 31 || day < 1 || year < -1) {
branch  0 taken 89% (fallthrough)
branch  1 taken 11%
branch  2 taken 88% (fallthrough)
branch  3 taken 12%
branch  4 taken 86% (fallthrough)
branch  5 taken 14%
branch  6 taken 88% (fallthrough)
branch  7 taken 12%
branch  8 taken 0% (fallthrough)
branch  9 taken 100%
       15:   12:		return string("Invalid input date");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   13:	}
        -:   14:
        -:   15:	int next_month, next_day, next_year;
        -:   16:
        -:   17:	// February
       22:   18:	if (month == 2) {
branch  0 taken 45% (fallthrough)
branch  1 taken 55%
       10:   19:		if (leap_year) {
branch  0 taken 30% (fallthrough)
branch  1 taken 70%
        3:   20:			if (day > 29) {
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        1:   21:				return string("Invalid input date");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   22:			}
        -:   23:
        2:   24:			if (day == 29) {
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        1:   25:				next_month = month + 1;
        1:   26:				next_day = 1;
        1:   27:				next_year = year;
        -:   28:			}
        -:   29:			else {
        1:   30:				next_month = month;
        1:   31:				next_day = day + 1;
        1:   32:				next_year = year;
        -:   33:			}
        -:   34:		}
        -:   35:		else {
        7:   36:			if (day > 28) {
branch  0 taken 43% (fallthrough)
branch  1 taken 57%
        3:   37:				return string("Invalid input date");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   38:			}
        4:   39:			if (day == 28) {
branch  0 taken 75% (fallthrough)
branch  1 taken 25%
        3:   40:				next_month = month + 1;
        3:   41:				next_day = 1;
        3:   42:				next_year = year;
        -:   43:			}
        -:   44:			else {
        1:   45:				next_month = month;
        1:   46:				next_day = day + 1;
        1:   47:				next_year = year;
        -:   48:			}
        -:   49:		}
        -:   50:	}
        -:   51:	// long months
       12:   52:	else if (long_months.find(month) != long_months.end()) {
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 25% (fallthrough)
branch  6 taken 75%
        -:   53:		/* Already prevent day > 31 at line 11~13
        -:   54:		if (day > 31)
        -:   55:			return string("Invalid input date");
        -:   56:		*/
        -:   57:
        3:   58:		if (day == 31) {
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        2:   59:			if (month == 12) {
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        1:   60:				next_month = 1;
        1:   61:				next_day = 1;
        1:   62:				next_year = year + 1;
        -:   63:			}
        -:   64:			else {
        1:   65:				next_month = month + 1;
        1:   66:				next_day = 1;
        1:   67:				next_year = year;
        -:   68:			}
        -:   69:		}
        -:   70:		else {
        1:   71:			next_month = month;
        1:   72:			next_day = day + 1;
        1:   73:			next_year = year;
        -:   74:		}
        -:   75:	}
        -:   76:	// short months
        -:   77:	else {
        9:   78:		if (day > 30)
branch  0 taken 44% (fallthrough)
branch  1 taken 56%
        4:   79:			return string("Invalid input date");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   80:
        5:   81:		if (day == 30) {
branch  0 taken 20% (fallthrough)
branch  1 taken 80%
        1:   82:			next_month = month + 1;
        1:   83:			next_day = 1;
        1:   84:			next_year = year;
        -:   85:		}
        -:   86:		else {
        4:   87:			next_month = month;
        4:   88:			next_day = day + 1;
        4:   89:			next_year = year;
        -:   90:		}
        -:   91:	}
        -:   92:
       14:   93:	return to_string(next_month) + "/" + to_string(next_day) + "/" + to_string(next_year);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
branch 13 taken 100% (fallthrough)
branch 14 taken 0% (throw)
call   15 returned 100%
branch 16 taken 100% (fallthrough)
branch 17 taken 0% (throw)
call   18 returned 100%
branch 19 taken 100% (fallthrough)
branch 20 taken 0% (throw)
call   21 returned 100%
call   22 returned 100%
call   23 returned 100%
call   24 returned 100%
call   25 returned 100%
call   26 returned 100%
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
function _GLOBAL__sub_I__Z9next_dateB5cxx11iii called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        3:   94:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
