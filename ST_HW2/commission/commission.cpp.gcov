        -:    0:Source:commission.cpp
        -:    0:Graph:commission.gcno
        -:    0:Data:commission.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "hw1.h"
        -:    2:
function _Z10commissionB5cxx11iii called 39 returned 100% blocks executed 72%
       39:    3:string commission(int locks, int stocks, int barrels) {
       39:    4:	if (locks == -1)
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:    5:		return "";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:    6:
        -:    7:	// invalid input
       76:    8:	vector<string> invalid_msg;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 never executed
       38:    9:	invalid_msg.clear();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       38:   10:	if (locks == 0 || locks < -1 || locks > 70)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 74% (fallthrough)
branch  3 taken 26%
branch  4 taken 36% (fallthrough)
branch  5 taken 64%
       20:   11:		invalid_msg.push_back("locks should be in range of 1~70");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
branch  8 taken 100% (fallthrough)
branch  9 taken 0% (throw)
call   10 returned 100%
call   11 never executed
call   12 never executed
       38:   12:	if (stocks < 1 || stocks > 80)
branch  0 taken 74% (fallthrough)
branch  1 taken 26%
branch  2 taken 36% (fallthrough)
branch  3 taken 64%
       20:   13:		invalid_msg.push_back("stocks should be in range of 1~80");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
branch  8 taken 100% (fallthrough)
branch  9 taken 0% (throw)
call   10 returned 100%
call   11 never executed
call   12 never executed
       38:   14:	if (barrels < 1 || barrels > 90)
branch  0 taken 74% (fallthrough)
branch  1 taken 26%
branch  2 taken 36% (fallthrough)
branch  3 taken 64%
       20:   15:		invalid_msg.push_back("barrels should be in range of 1~90");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
branch  8 taken 100% (fallthrough)
branch  9 taken 0% (throw)
call   10 returned 100%
call   11 never executed
call   12 never executed
call   13 never executed
        -:   16:
       38:   17:	if (invalid_msg.size() > 0) {
call    0 returned 100%
branch  1 taken 84% (fallthrough)
branch  2 taken 16%
       64:   18:		string error_msg = "";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 never executed
call    9 never executed
       92:   19:		for (int i = 0; i < invalid_msg.size(); i++) {
call    0 returned 100%
branch  1 taken 65% (fallthrough)
branch  2 taken 35%
       60:   20:			error_msg += invalid_msg[i];
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
       60:   21:			if (i != invalid_msg.size() - 1)
call    0 returned 100%
branch  1 taken 47% (fallthrough)
branch  2 taken 53%
       28:   22:				error_msg += " & ";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   23:		}
       32:   24:		return error_msg;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   25:	}
        -:   26:
        6:   27:	double c = 0;
        6:   28:	double total = locks * 45 + stocks * 30 + barrels * 25;
        -:   29:
        6:   30:	if (total > 1800) {
branch  0 taken 17% (fallthrough)
branch  1 taken 83%
        1:   31:		c = (total - 1800) * 0.2 + 800 * 0.15 + 1000 * 0.1;
        -:   32:	}
        5:   33:	else if (total > 1000) {
branch  0 taken 40% (fallthrough)
branch  1 taken 60%
        2:   34:		c = (total - 1000) * 0.15 + 1000 * 0.1;
        -:   35:	}
        -:   36:	else {
        3:   37:		c = total * 0.1;
        -:   38:	}
        -:   39:
       12:   40:	stringstream ss;
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 never executed
        6:   41:	ss << fixed << setprecision(2) << c;
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
branch  8 taken 100% (fallthrough)
branch  9 taken 0% (throw)
       12:   42:	string result = "$" + ss.str();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 never executed
call   13 never executed
        6:   43:	return result;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
function _GLOBAL__sub_I__Z10commissionB5cxx11iii called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        3:   44:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
